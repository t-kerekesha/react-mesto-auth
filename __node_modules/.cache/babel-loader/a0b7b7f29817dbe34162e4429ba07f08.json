{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  getAllInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  editUserInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  editUserAvatar(linkAvatar) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: linkAvatar\n      })\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  addNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(this._baseUrl + '/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  likeCard(cardId, like) {\n    const method = like ? 'PUT' : 'DELETE';\n    return fetch(this._baseUrl + '/cards/' + cardId + '/likes', {\n      method: method,\n      headers: this._headers\n    }).then(response => {\n      return this._checkResponse(response);\n    });\n  }\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      return Promise.reject({\n        message: `Ошибка: ${response.status}`\n      });\n    }\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://nomoreparties.co/v1/cohort-51',\n  headers: {\n    authorization: '9e7255a8-14b6-4bc0-9fe9-419fec94bcd2',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getAllInfo","Promise","all","getUserInfo","getInitialCards","fetch","then","response","_checkResponse","editUserInfo","name","about","method","body","JSON","stringify","editUserAvatar","linkAvatar","avatar","addNewCard","link","deleteCard","cardId","likeCard","like","ok","json","reject","message","status","api","authorization"],"sources":["C:/Users/kti/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  getAllInfo() {\r\n    return Promise.all([ this.getUserInfo(), this.getInitialCards() ]);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch((this._baseUrl + '/users/me'), {\r\n      headers: this._headers\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch((this._baseUrl + '/cards'), {\r\n      headers: this._headers\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  editUserInfo({ name, about }) {\r\n    return fetch((this._baseUrl + '/users/me'), {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about\r\n      })\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  editUserAvatar(linkAvatar) {\r\n    return fetch((this._baseUrl + '/users/me/avatar'), {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: linkAvatar\r\n      })\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  addNewCard({ name, link }) {\r\n    return fetch((this._baseUrl + '/cards'), {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch((this._baseUrl + '/cards/' + cardId), {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  likeCard(cardId, like) {\r\n    const method = (like)? 'PUT' : 'DELETE';\r\n    return fetch((this._baseUrl + '/cards/' + cardId + '/likes'), {\r\n      method: method,\r\n      headers: this._headers\r\n    })\r\n    .then((response) => {\r\n      return this._checkResponse(response);\r\n    });\r\n  }\r\n\r\n  _checkResponse(response) {\r\n    if(response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject({ message: `Ошибка: ${response.status}` });\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://nomoreparties.co/v1/cohort-51',\r\n  headers: {\r\n    authorization: '9e7255a8-14b6-4bc0-9fe9-419fec94bcd2',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}